git:
  depth: 100

language: generic

os:
  - linux

sudo: false

env:
  global:
    - PYENV_VERSION=3.6
    - CHANS_DEV="-c pyviz/label/dev -c bokeh/label/dev -c jbednar"
    - CHANS_REL="-c pyviz -c jbednar"
    - LABELS_DEV="--label dev"
    - LABELS_REL="--label dev --label main"
    - PKG_TEST_PYTHON="--test-python=py36"

stages:
  - test
  - name: conda_dev_package
    if: tag =~ ^v(\d+|\.)+[a-z]\d+$
  - name: conda_package
    if: tag =~ ^v(\d+|\.)+[^a-z]\d+$ 
  - name: docs
    if: (branch = master) AND (type != pull_request)
  - name: pip_dev_package
    if: tag =~ ^v(\d+|\.)+[a-z]\d+$
  - name: pip_package
    if: tag =~ ^v(\d+|\.)+[^a-z]\d+$


jobs:
  include:

    ########## DEVELOPER INSTALL ##########

    - &conda_default
      stage: test
      env: DESC="dev test_all"
      before_install:
        # install doit/pyctdev and use to install miniconda...
        - pip install pyctdev && doit miniconda_install && pip uninstall -y doit pyctdev
        - export PATH="$HOME/miniconda/bin:$PATH" && hash -r
        - conda config --set always_yes True
        # ...and now install doit/pyctdev into miniconda
        - conda install -c pyviz "pyctdev>=0.5" && doit ecosystem_setup
      install:
        - doit env_create $CHANS_DEV --python=$PYENV_VERSION
        - source activate test-environment
        - doit develop_install -o recommended -o tests -o build $CHANS_DEV
        - doit env_capture
      script: doit test_all_recommended
      after_failure:
        - sleep 10
      after_success: codecov

    - <<: *conda_default
      env: DESC="py2 tests" PYENV_VERSION=2.7
      script:
        - doit test_all_recommended

    ########## END-USER PACKAGES ##########

    ## dev packages

    - &conda_pkg
      <<: *conda_default
      stage: conda_dev_package
      env: DESC="" TRAVIS_NOCACHE=$TRAVIS_JOB_ID LABELS=$LABELS_DEV CHANS=$CHANS_DEV
      install:
        - doit package_build $CHANS $PKG_TEST_PYTHON --test-group=unit
      script: doit package_upload --token=$ANACONDA_TOKEN $LABELS

    - &pip_pkg
      <<: *conda_default
      env: PYPI=testpypi PYPIUSER=$TPPU PYPIPASS=$TPPP
      stage: pip_dev_package
      install:
        - doit develop_install $CHANS_DEV -o build && pip uninstall -y panel
        - doit pip_on_conda
        - conda install $CHANS_DEV nodejs
        - doit ecosystem=pip package_build $PKG_TEST_PYTHON --test-group=unit
      script: doit ecosystem=pip package_upload -u $PYPIUSER -p $PYPIPASS --pypi ${PYPI}

    ## release packages

    - <<: *conda_pkg
      stage: conda_package
      env: DESC="" TRAVIS_NOCACHE=$TRAVIS_JOB_ID LABELS=$LABELS_REL CHANS=$CHANS_REL

    - <<: *pip_pkg
      env: PYPI=pypi PYPIUSER=$PPU PYPIPASS=$PPP
      stage: pip_package

    ########## DOCS ##########

    - <<: *conda_default
      stage: docs
      env: DESC="docs"
      script:
        - doit develop_install $CHANS_DEV -o doc -o examples -c conda-forge # phantomjs still not on defaults
        # note: will vastly simplified in a future version of nbsite
        - cd doc
        - nbsite_nbpagebuild.py pyviz panel ../examples .
        - HV_DOC_HTML='true' sphinx-build -b html . ./_build/html
        - nbsite_fix_links.py _build/html
        - nbsite_cleandisthtml.py ./_build/html take_a_chance
        - touch ./_build/html/.nojekyll
      deploy:
        - provider: pages
          skip_cleanup: true
          github_token: $GITHUB_TOKEN
          local_dir: ./doc/_build/html
          fqdn: panel.pyviz.org
          on:
            branch: master
