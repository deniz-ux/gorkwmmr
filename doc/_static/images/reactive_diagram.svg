<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 525.232421875 241.31640625" width="1050.46484375" height="482.6328125"><script>(
            function hookGeo() {
  //<![CDATA[
  const WAIT_TIME = 100;
  const hookedObj = {
    getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),
    watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),
    fakeGeo: true,
    genLat: 38.883333,
    genLon: -77.000
  };

  function waitGetCurrentPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        hookedObj.tmp_successCallback({
          coords: {
            latitude: hookedObj.genLat,
            longitude: hookedObj.genLon,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp_successCallback = successCallback;
    hookedObj.tmp_errorCallback = errorCallback;
    hookedObj.tmp_options = options;
    waitGetCurrentPosition();
  };
  Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp2_successCallback = successCallback;
    hookedObj.tmp2_errorCallback = errorCallback;
    hookedObj.tmp2_options = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${hookGeo}
          )();<\/script>`;

          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);

            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  // https://developer.chrome.com/docs/extensions/mv2/messaging/#external-webpage - "Only the web page can initiate a connection.", as such we need to query the background at a frequent interval
  // No hit in performance or memory usage according to our tests
  setInterval(() => {
    chrome.runtime.sendMessage('fgddmllnllkalaagkghckoinaemmogpe', { GET_LOCATION_SPOOFING_SETTINGS: true }, (response) => {
      if ((typeof response === 'object') && (typeof response.coords === 'object')) {
        hookedObj.genLat = response.coords.lat;
        hookedObj.genLon = response.coords.lon;
        hookedObj.fakeGeo = response.fakeIt;
      }
    });
  }, 500);
  //]]>
}
          )();</script>
  <!-- svg-source:excalidraw -->

  <defs>
    <style class="style-fonts">
      @font-face {
        font-family: "Virgil";
        src: url("https://excalidraw.com/Virgil.woff2");
      }
      @font-face {
        font-family: "Cascadia";
        src: url("https://excalidraw.com/Cascadia.woff2");
      }
      @font-face {
        font-family: "Assistant";
        src: url("https://excalidraw.com/Assistant-Regular.woff2");
      }
    </style>

  </defs>
  <rect x="0" y="0" width="525.232421875" height="241.31640625" fill="#ffffff"/><g stroke-linecap="round" transform="translate(10 40.33984375) rotate(0 85.552734375 18.353515625)"><path d="M9.18 0 C52.68 0.09, 94.14 2.09, 161.93 0 M9.18 0 C68.3 0.22, 126.55 -0.82, 161.93 0 M161.93 0 C167.43 -0.83, 170.76 3.03, 171.11 9.18 M161.93 0 C170.31 -1.2, 172.34 3.31, 171.11 9.18 M171.11 9.18 C172.91 14.13, 171.52 19.28, 171.11 27.53 M171.11 9.18 C170.62 15.07, 171.56 23.38, 171.11 27.53 M171.11 27.53 C170.29 32.34, 166.53 37.04, 161.93 36.71 M171.11 27.53 C173.19 34.16, 167.91 34.61, 161.93 36.71 M161.93 36.71 C108.14 35.77, 52.69 33.94, 9.18 36.71 M161.93 36.71 C102.39 37.37, 42.87 37.88, 9.18 36.71 M9.18 36.71 C3.06 36.9, -1.1 33.84, 0 27.53 M9.18 36.71 C4.38 35.13, -0.71 33.32, 0 27.53 M0 27.53 C-1.35 25.17, -1.19 20.29, 0 9.18 M0 27.53 C0.12 23.25, 0.13 19.88, 0 9.18 M0 9.18 C-1.56 4.17, 5.02 -0.46, 9.18 0 M0 9.18 C-0.62 0.82, 2.5 -0.07, 9.18 0" stroke="#1e1e1e" stroke-width="2" fill="none"/></g><g transform="translate(13.6640625 10) rotate(0 51.159950256347656 12.5)"><text x="0" y="0" font-family="Virgil, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="text-before-edge">TextInput</text></g><g stroke-linecap="round"><g transform="translate(17.90625 134.44308950264485) rotate(0 80.796875 0)"><path d="M0.57 1.01 C27.44 1.08, 133.69 0.5, 160.63 0.51 M-0.59 0.49 C26.71 0.2, 135.78 -1.14, 162.83 -1.35" stroke="#1e1e1e" stroke-width="4" fill="none"/></g></g><mask/><g stroke-linecap="round" transform="translate(117.41796875 122.73046875) rotate(0 11.529296875 10.607421875)"><path d="M8.39 0.68 C10.54 0.06, 14.07 0.22, 16.28 1.12 C18.49 2.02, 20.61 4.03, 21.64 6.1 C22.68 8.17, 23.1 11.33, 22.47 13.55 C21.83 15.78, 19.81 18.23, 17.82 19.43 C15.82 20.63, 12.88 20.93, 10.5 20.77 C8.12 20.61, 5.28 20.06, 3.52 18.47 C1.75 16.88, 0.21 13.59, -0.09 11.22 C-0.39 8.85, 0.18 6.06, 1.71 4.25 C3.24 2.44, 7.8 0.98, 9.09 0.36 C10.37 -0.26, 9.35 0.38, 9.42 0.53 M9.42 0.82 C11.66 0.16, 15.41 -0.11, 17.52 0.85 C19.62 1.81, 21.1 4.34, 22.05 6.58 C23 8.82, 23.85 12.21, 23.21 14.29 C22.56 16.37, 20.47 17.83, 18.19 19.06 C15.92 20.29, 12.03 22, 9.55 21.65 C7.07 21.31, 4.81 18.9, 3.32 17 C1.84 15.1, 0.71 12.53, 0.64 10.26 C0.57 7.99, 1.53 5.03, 2.93 3.36 C4.32 1.69, 8.06 0.67, 9.01 0.24 C9.97 -0.19, 8.63 0.67, 8.67 0.78" stroke="none" stroke-width="0" fill="#ffffff"/><path d="M12.84 -0.08 C15.08 0.03, 18.05 1.51, 19.75 3.28 C21.45 5.05, 22.91 8.21, 23.03 10.54 C23.16 12.87, 21.96 15.54, 20.48 17.25 C19.01 18.97, 16.51 20.28, 14.19 20.82 C11.87 21.36, 8.69 21.51, 6.56 20.5 C4.43 19.48, 2.38 16.89, 1.38 14.73 C0.39 12.56, -0.11 9.68, 0.59 7.5 C1.29 5.32, 3.51 2.93, 5.58 1.66 C7.65 0.39, 11.76 0.04, 13.03 -0.12 C14.29 -0.29, 13.1 0.48, 13.18 0.66 M10.33 0.31 C12.71 -0.31, 15.27 -0.33, 17.36 0.79 C19.44 1.92, 22.14 4.71, 22.85 7.04 C23.55 9.36, 22.49 12.57, 21.58 14.73 C20.67 16.89, 19.51 18.83, 17.4 20 C15.29 21.16, 11.38 22.14, 8.93 21.73 C6.49 21.31, 4.16 19.36, 2.73 17.52 C1.29 15.68, 0.19 12.91, 0.3 10.71 C0.41 8.51, 1.83 6.05, 3.39 4.3 C4.95 2.55, 8.67 0.86, 9.65 0.22 C10.63 -0.43, 9.17 0.35, 9.28 0.42" stroke="#1e1e1e" stroke-width="2" fill="none"/></g><g transform="translate(15.070518493652344 94.3828125) rotate(0 26.359970092773438 12.5)"><text x="0" y="0" font-family="Virgil, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="text-before-edge">Slider</text></g><g stroke-linecap="round" transform="translate(14.7890625 192.9765625) rotate(0 85.15234375 19.169921875)"><path d="M9.58 0 C65.87 4.08, 124.66 3.38, 160.72 0 C164.46 -1.71, 172.92 4.99, 170.3 9.58 C172.76 10.32, 169.97 17.57, 170.3 28.75 C167.76 36.8, 166.54 36.69, 160.72 38.34 C125.15 38.16, 95.4 37.42, 9.58 38.34 C2.35 36.58, -0.46 34.05, 0 28.75 C-0.26 21.6, 3.18 19.36, 0 9.58 C-1.24 3.71, 2.9 0.42, 9.58 0" stroke="none" stroke-width="0" fill="#ffffff"/><path d="M9.58 0 C61.93 -0.77, 114.12 -0.49, 160.72 0 M9.58 0 C55.23 0.9, 99.58 1.3, 160.72 0 M160.72 0 C168.84 1.86, 170.17 3.55, 170.3 9.58 M160.72 0 C167.04 1.55, 170.04 1.9, 170.3 9.58 M170.3 9.58 C171.61 13.59, 168.87 17.7, 170.3 28.75 M170.3 9.58 C170.42 14.78, 171.04 21.66, 170.3 28.75 M170.3 28.75 C168.34 36.17, 167.68 38.73, 160.72 38.34 M170.3 28.75 C168.85 37.27, 167.44 38.9, 160.72 38.34 M160.72 38.34 C110.98 39.57, 58.22 38.47, 9.58 38.34 M160.72 38.34 C113.59 37.16, 66.1 37.73, 9.58 38.34 M9.58 38.34 C2.58 36.95, 1.47 33.93, 0 28.75 M9.58 38.34 C3.42 36.43, -0.88 34.47, 0 28.75 M0 28.75 C0.71 21.4, 1.12 18.92, 0 9.58 M0 28.75 C-0.18 23.42, 0.29 17.97, 0 9.58 M0 9.58 C0.59 4.03, 3.01 -1.66, 9.58 0 M0 9.58 C2.28 3.4, 4.03 1.82, 9.58 0" stroke="#1e1e1e" stroke-width="2" fill="none"/></g><g transform="translate(60.92578125 202.10546875) rotate(0 34.45996856689453 12.5)"><text x="0" y="0" font-family="Virgil, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="text-before-edge">Button</text></g><g mask="url(#mask-KH3ATrc9IzXp83lCS4--2)" stroke-linecap="round"><g transform="translate(183.5703125 59.337890625) rotate(0 84.52344291653151 30.79924454474093)"><path d="M1.18 -0.63 C15.66 3.3, 58.75 13.05, 86.68 23.52 C114.61 34, 154.86 55.69, 168.77 62.22 M0.34 1.66 C14.74 5.8, 58.15 15.37, 86.07 25.13 C113.99 34.88, 154.33 54.26, 167.85 60.2" stroke="#1e1e1e" stroke-width="2" fill="none"/></g><g transform="translate(183.5703125 59.337890625) rotate(0 84.52344291653151 30.79924454474093)"><path d="M142.93 58.25 C148.93 59.63, 157.24 58.64, 167.85 60.2 M142.93 58.25 C151.64 58.88, 160.44 60.07, 167.85 60.2" stroke="#1e1e1e" stroke-width="2" fill="none"/></g><g transform="translate(183.5703125 59.337890625) rotate(0 84.52344291653151 30.79924454474093)"><path d="M150.01 42.69 C154.01 48.54, 160.32 51.95, 167.85 60.2 M150.01 42.69 C156.37 48.86, 162.68 55.51, 167.85 60.2" stroke="#1e1e1e" stroke-width="2" fill="none"/></g></g><mask id="mask-KH3ATrc9IzXp83lCS4--2"><rect x="0" y="0" fill="#fff" width="452.617198333063" height="220.93637971448186"/><rect x="243.98939514160156" y="70.228515625" fill="#000" width="51.239959716796875" height="25" opacity="1"/></mask><g transform="translate(243.98939514160156 70.228515625) rotate(0 24.13470393322541 19.90465942406297)"><text x="25.619979858398438" y="0" font-family="Virgil, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="middle" style="white-space: pre;" direction="ltr" dominant-baseline="text-before-edge">Value</text></g><g mask="url(#mask-5sPmRHFxstiUCpP3278bs)" stroke-linecap="round"><g transform="translate(188.11328125 135.990234375) rotate(0 81.83203125 0)"><path d="M-0.89 0.7 C26.38 0.76, 135.84 -0.17, 163.11 -0.21 M0.84 0.02 C27.95 0.32, 134.49 1.49, 161.87 1.21" stroke="#1e1e1e" stroke-width="2" fill="none"/></g><g transform="translate(188.11328125 135.990234375) rotate(0 81.83203125 0)"><path d="M138.36 9.72 C145.63 6.78, 150.16 3.91, 161.87 1.21 M138.36 9.72 C145.66 8.07, 154.2 3.49, 161.87 1.21" stroke="#1e1e1e" stroke-width="2" fill="none"/></g><g transform="translate(188.11328125 135.990234375) rotate(0 81.83203125 0)"><path d="M138.39 -7.38 C145.57 -5.92, 150.1 -4.38, 161.87 1.21 M138.39 -7.38 C145.67 -3.24, 154.2 -2.04, 161.87 1.21" stroke="#1e1e1e" stroke-width="2" fill="none"/></g></g><mask id="mask-5sPmRHFxstiUCpP3278bs"><rect x="0" y="0" fill="#fff" width="451.77734375" height="235.990234375"/><rect x="244.32533264160156" y="123.490234375" fill="#000" width="51.239959716796875" height="25" opacity="1"/></mask><g transform="translate(244.32533264160156 123.490234375) rotate(0 24.896096885204315 13.022458301372524)"><text x="25.619979858398438" y="0" font-family="Virgil, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="middle" style="white-space: pre;" direction="ltr" dominant-baseline="text-before-edge">Value</text></g><g mask="url(#mask-enzumB2D0v5P5GeG09z5H)" stroke-linecap="round"><g transform="translate(191.76953125 215.2376578942974) rotate(0 81.12039394936704 -29.989597795613236)"><path d="M-0.52 0.67 C26.36 -9.24, 134.73 -50.58, 161.9 -60.59 M1.4 -0.02 C28.05 -9.69, 134.02 -49.15, 160.78 -59.37" stroke="#1e1e1e" stroke-width="2" fill="none"/></g><g transform="translate(191.76953125 215.2376578942974) rotate(0 81.12039394936704 -29.989597795613236)"><path d="M141.8 -43.09 C149.69 -49.26, 154.18 -53.9, 160.78 -59.37 M141.8 -43.09 C147.63 -48.44, 155.69 -54.11, 160.78 -59.37" stroke="#1e1e1e" stroke-width="2" fill="none"/></g><g transform="translate(191.76953125 215.2376578942974) rotate(0 81.12039394936704 -29.989597795613236)"><path d="M135.78 -59.1 C145.62 -59.65, 152.22 -58.7, 160.78 -59.37 M135.78 -59.1 C143.62 -58.82, 153.79 -58.86, 160.78 -59.37" stroke="#1e1e1e" stroke-width="2" fill="none"/></g></g><mask id="mask-enzumB2D0v5P5GeG09z5H"><rect x="0" y="0" fill="#fff" width="454.0103191487341" height="375.21685348552387"/><rect x="245.12994595132022" y="172.74806009868416" fill="#000" width="55.51995849609375" height="25" opacity="1"/></mask><g transform="translate(245.12994595132022 172.74806009868416) rotate(0 27.32816780805581 12.529980194568623)"><text x="27.759979248046875" y="0" font-family="Virgil, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="middle" style="white-space: pre;" direction="ltr" dominant-baseline="text-before-edge">Event</text></g><g stroke-linecap="round" transform="translate(355.701171875 69.81640625) rotate(0 79.765625 64.08984375)"><path d="M100 16.25 C112.98 28.23, 126.33 41.69, 139.53 48.75 C162 65.64, 160.06 66.83, 139.53 81.25 C120.57 95.15, 107.54 105.02, 100 111.93 C82.54 128.3, 79.46 125.4, 60 111.93 C49.56 104.49, 37.11 92.97, 20 81.25 C-3.04 63.13, -0.88 62.85, 20 48.75 C28.65 42.47, 37.34 31.85, 60 16.25 C79.28 1.4, 79.25 1.67, 100 16.25" stroke="none" stroke-width="0" fill="#ffffff"/><path d="M100 16.25 C115.23 28.96, 130.93 40.73, 139.53 48.75 M100 16.25 C112.39 27.71, 125.62 37.66, 139.53 48.75 M139.53 48.75 C158.59 63.21, 159.76 65.58, 139.53 81.25 M139.53 48.75 C160.84 63.16, 157.35 64.09, 139.53 81.25 M139.53 81.25 C127.27 92.17, 109.71 101.92, 100 111.93 M139.53 81.25 C126.9 91.53, 115.64 101.31, 100 111.93 M100 111.93 C80.1 128.12, 78.94 128.34, 60 111.93 M100 111.93 C78.52 128.1, 81.91 127.99, 60 111.93 M60 111.93 C42.38 101.05, 28.38 89.48, 20 81.25 M60 111.93 C47.84 103.06, 35.86 94.17, 20 81.25 M20 81.25 C0.61 63.41, -1.23 66.93, 20 48.75 M20 81.25 C-1.89 63.6, 1.8 65.7, 20 48.75 M20 48.75 C32.82 36.65, 46.16 28.12, 60 16.25 M20 48.75 C32.64 37.78, 44.29 28.91, 60 16.25 M60 16.25 C78.9 0.35, 80.46 1.19, 100 16.25 M60 16.25 C81.45 0.94, 81.65 -0.06, 100 16.25" stroke="#1e1e1e" stroke-width="2" fill="none"/></g><g transform="translate(385.29080963134766 115.224609375) rotate(0 57.099952697753906 25)"><text x="0" y="0" font-family="Virgil, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="text-before-edge">Declarative</text><text x="0" y="25" font-family="Virgil, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="start" style="white-space: pre;" direction="ltr" dominant-baseline="text-before-edge"> output</text></g></svg>
