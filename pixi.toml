[project]
name = "panel"
channels = ["conda-forge", "pyviz/label/dev", "bokeh"]
platforms = ["linux-64", "osx-arm64", "osx-64", "win-64"]

[tasks]
download-data = 'bokeh sampledata'
install = 'python -m pip install --no-deps --disable-pip-version-check -e .'

[environments]
test-39 = ["py39", "test-core", "test", "example", "test-example", "test-unit-task"]
test-310 = ["py310", "test-core", "test", "example", "test-example", "test-unit-task"]
test-311 = ["py311", "test-core", "test", "example", "test-example", "test-unit-task"]
test-312 = ["py312", "test-core", "test", "example", "test-example", "test-unit-task"]
test-ui = ["py312", "test-core", "test", "test-ui"]
test-core = ["py312", "test-core", "test-unit-task"]
docs = ["py311", "example", "doc"]
build = ["py311", "build"]
lint = ["py311", "lint"]

[dependencies]
bleach = "*"
bokeh = ">=3.4.0,<3.5.0"
linkify-it-py = "*"
markdown = "*"
markdown-it-py = "*"
mdit-py-plugins = "*"
nodejs= ">=20"
packaging = "*"
pandas = ">=1.2"
param = ">=2.0.0,<3.0"
pip = "*"
pyviz_comms = ">=2.0.0"
requests = "*"
typing_extensions = "*"
# Recommended
holoviews = ">=1.16.0"
jupyterlab = "*"
matplotlib = "*"
pillow = "*"
plotly = ">=4.0"
watchfiles = "*"

[feature.py39.dependencies]
python = "3.9.*"

[feature.py310.dependencies]
python = "3.10.*"

[feature.py311.dependencies]
python = "3.11.*"

[feature.py312.dependencies]
python = "3.12.*"

[feature.example.dependencies]
aiohttp = "*"
altair = "*"
croniter = "*"
dask-expr = "*"
datashader = "*"
fastparquet = "*"
folium = "*"
graphviz = "*"
hvplot = "*"
ipyleaflet = "*"
ipympl = "*"
ipyvolume = "*"
ipyvuetify = "*"
ipywidgets = "*"
ipywidgets_bokeh = "*"
jupyter_bokeh = ">=3.0.7"
networkx = ">=2.5"
pydeck = "*"
pyecharts = "*"
pygraphviz = "*"
pyinstrument = ">=4.0"
python-graphviz = "*"
pyvista = "*"
reacton = "*"
scikit-image = "*"
scikit-learn = "*"
seaborn = "*"
streamz = "*"
textual = "*"
tqdm = ">=4.48.0"
vega_datasets = "*"
vtk = "*"
xarray = "*"
xgboost = "*"

# =============================================
# =================== TESTS ===================
# =============================================
[feature.test-core.dependencies]
altair = "*"
anywidget = "*"
diskcache = "*"
psutil = "*"
pytest = "*"
pytest-asyncio = "*"
pytest-cov = "*"
pytest-github-actions-annotate-failures = "*"
pytest-rerunfailures = "*"
pytest-xdist = "*"

[feature.test.dependencies]
folium = "*"
ipympl = "*"
ipyvuetify = "*"
ipywidgets_bokeh = "*"
numba = "*"
reacton = "*"
scipy = "*"
textual = "*"

[feature.test-unit-task.tasks] # So it is not showing up in the test-ui environment
test-unit = 'pytest panel/tests -n logical --dist loadgroup'
test-subprocess = 'pytest panel/tests --subprocess'

[feature.test-example.tasks]
test-docs = 'pytest panel/tests --docs'
test-example = 'pytest -n logical --dist loadscope --nbval-lax examples'

[feature.test-example.dependencies]
nbval = "*"

[feature.test-ui]
channels = ["conda-forge", "pyviz/label/dev", "microsoft"]

[feature.test-ui.dependencies]
playwright = "*"
pytest-playwright = "*"
jupyter_server = "*"

[feature.test-ui.tasks]
install-ui = 'playwright install chromium'

[feature.test-ui.tasks.test-ui]
cmd = 'pytest panel/tests/ui --ui --browser chromium -n logical --dist loadgroup--reruns 3 --reruns-delay 10'
depends_on = ["install-ui"]

# =============================================
# =================== DOCS ====================
# =============================================
[feature.doc.dependencies]
lxml = "*"
nbsite = ">=0.8.4"
pandas = "<2.1.0" # Avoid deprecation warnings

[feature.doc.tasks]
docs-refmanual = 'python ./doc/generate_modules.py panel -d ./doc/api -n panel -e tests'
docs-convert-gallery = 'python scripts/gallery/convert_gallery.py'
docs-generate = 'nbsite build --what=html --output=builtdocs --org holoviz --project-name panel'
docs-copy-panel-dist = 'cp -r ./panel/dist ./builtdocs/panel_dist'
docs-pyodide = 'panel convert examples/gallery/*.ipynb doc/how_to/*/examples/*.md --to pyodide-worker --out ./builtdocs/pyodide/ --pwa --index --requirements doc/pyodide_dependencies.json'

[feature.doc.tasks.docs-build]
depends_on = ['docs-refmanual', 'docs-convert-gallery', 'docs-generate', 'docs-copy-panel-dist', 'docs-pyodide']

# =============================================
# ================== BUILD ====================
# =============================================
[feature.build.dependencies]
python-build = "*"
conda-build = "*"

[feature.build.tasks]
build-conda = 'bash scripts/conda/build.sh'
build-pip = 'python -m build .'
# build-pyodide = 'python scripts/build_pyodide_wheels.py'

# =============================================
# =================== LINT ====================
# =============================================
[feature.lint.dependencies]
pre-commit = "*"

[feature.lint.tasks]
lint = 'pre-commit run --all-files'
lint-install = 'pre-commit install'
