[project]
name = "panel"
channels = ["conda-forge", "pyviz/label/dev", "bokeh"]
platforms = ["linux-64", "osx-arm64", "osx-64", "win-64"]

[tasks]
download-data = 'bokeh sampledata'
install = 'python -m pip install --no-deps --disable-pip-version-check -e .'

[environments]
test-39 = ["py39", "test-core", "test", "example", "test-example", "test-unit-task"]
test-310 = ["py310", "test-core", "test", "example", "test-example", "test-unit-task"]
test-311 = ["py311", "test-core", "test", "example", "test-example", "test-unit-task"]
test-312 = ["py312", "test-core", "test", "example", "test-example", "test-unit-task"]
test-ui = ["py312", "test-core", "test", "test-ui"]
test-core = ["py312", "test-core", "test-unit-task"]
docs = ["py311", "example", "doc"]
build = ["py311", "build"]
lint = ["py311", "lint"]

[dependencies]
bokeh = ">=3.4.0,<3.5.0"
param = ">=2.0.0,<3.0"
pyviz_comms = ">=2.0.0"
xyzservices = ">=2021.09.1" # Bokeh dependency, but pyodide 23.0.0 does not always pick it up
markdown = "*"
markdown-it-py = "*"
linkify-it-py = "*"
mdit-py-plugins = "*"
requests = "*"
tqdm = ">=4.48.0"
bleach = "*"
typing_extensions = "*"
pandas = ">=1.2"
# Recommended
jupyterlab = "*"
panel = ">=1.16.0"
matplotlib = "*"
pillow = "*"
plotly = ">=4.0"

[feature.py39.dependencies]
python = "3.9.*"

[feature.py310.dependencies]
python = "3.10.*"

[feature.py311.dependencies]
python = "3.11.*"

[feature.py312.dependencies]
python = "3.12.*"

[feature.example.dependencies]
hvplot = "*"
altair = "*"
streamz = "*"
vega_datasets = "*"
vtk = "*"
scikit-learn = "*"
datashader = "*"
jupyter_bokeh = ">=3.0.7"
pyvista = "*"
ipywidgets = "*"
ipywidgets_bokeh = "*"
ipyvolume = "*"
ipyleaflet = "*"
ipympl = "*"
folium = "*"
xarray = "*"
pyinstrument = ">=4.0"
aiohttp = "*"
croniter = "*"
graphviz = "*"
networkx = ">=2.5"
pygraphviz = "*"
seaborn = "*"
pydeck = "*"
python-graphviz = "*"
xgboost = "*"
ipyvuetify = "*"
reacton = "*"
scikit-image = "*"
fastparquet = "*"
textual = "*"
dask-expr = "*"

# =============================================
# =================== TESTS ===================
# =============================================
[feature.test_core.dependencies]
pytest = "*"
pytest-rerunfailures = "*"
pytest-asyncio = "<0.22"
pytest-xdist = "*"
pytest-cov = "*"
psutil = "*"
altair = "*"
anywidget = "*"
diskcache = "*"
watchfiles = "*"

[feature.test.dependencies]
folium = "*"
scipy = "*"
textual = "*"
ipympl = "*"
ipyvuetify = "*"
ipywidgets_bokeh = "*"
reacton = "*"
twine = "*"
numba = "<0.58" # Temporary pins

[feature.test-unit-task.tasks] # So it not showing up for UI tests
test-unit = 'pytest panel/tests -n logical --dist loadgroup'
test-subprocess = 'pytest panel/tests --subprocess'

[feature.test-example.tasks]
test-docs = 'pytest panel/tests --docs'
test-example = 'pytest -n logical --dist loadscope --nbval-lax example'

[feature.test-example.dependencies]
nbval = "*"

[feature.test-ui]
channels = ["conda-forge", "pyviz/label/dev", "microsoft"]

[feature.test-ui.dependencies]
playwright = "*"
pytest-playwright = "*"
jupyter-server = "*"
tomli = "*"

[feature.test-ui.tasks]
install-ui = 'playwright install chromium'

[feature.test-ui.tasks.test-ui]
cmd = 'pytest panel/tests/ui --ui --browser chromium -n logical --dist loadgroup--reruns 3 --reruns-delay 10'
depends_on = ["install-ui"]

# =============================================
# =================== DOCS ====================
# =============================================
[feature.doc.dependencies]
nbsite = ">=0.8.4"
lxml = "*"
pandas = "<2.1.0" # Avoid deprecation warnings

# [feature.doc.tasks]
# docs-generate-rst = 'nbsite generate-rst --org holoviz --project-name panel'
# docs-refmanual = 'python ./doc/generate_modules.py panel -d ./doc/reference_manual -n panel -e tests'
# docs-generate = 'nbsite build --what=html --output=builtdocs --org holoviz --project-name panel'

# [feature.doc.tasks.docs-build]
# depends_on = ['docs-generate-rst', 'docs-refmanual', 'docs-generate']

# =============================================
# ================== BUILD ====================
# =============================================
[feature.build.dependencies]
build = "*"
conda-build = "*"

# [feature.build.tasks]
# build-conda = 'bash scripts/conda/build.sh'
# build-pip = 'python -m build .'

# =============================================
# =================== LINT ====================
# =============================================
[feature.lint.dependencies]
pre-commit = "*"

# [feature.lint.tasks]
# lint = 'pre-commit run --all-files'
# lint-install = 'pre-commit install'
